给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例 1:

输入: 123
输出: 321
 示例 2:

输入: -123
输出: -321
示例 3:

输入: 120
输出: 21


注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。




数学方法
每次整除10取余，然后用上一个余数*10加上新的余数


x      最开始输入的数
pop   接收每次取到的个位数
result=0    最终输出的数

const resolve = (x) => {

	let result = 0;
	while(x !=0 ){
		const pop = x % 10;//拿到个位数
		x = parseInt(x/10);//x取整
		result = result*10 + pop//数字push进新的数
	}
	//加两行if判断溢出return 0
	return result

}
		  
console.log(resolve(15213532))  
console.log(resolve(-15213532)) 

