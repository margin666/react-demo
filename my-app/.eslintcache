[{"D:\\项目\\git-react-dom\\react-demo\\my-app\\src\\index.js":"1","D:\\项目\\git-react-dom\\react-demo\\my-app\\src\\App.jsx":"2","D:\\项目\\git-react-dom\\react-demo\\my-app\\src\\views\\menu\\Left.jsx":"3","D:\\项目\\git-react-dom\\react-demo\\my-app\\src\\views\\menu\\Right.jsx":"4","D:\\项目\\git-react-dom\\react-demo\\my-app\\src\\components\\note\\index.jsx":"5","D:\\项目\\git-react-dom\\react-demo\\my-app\\src\\components\\code\\index.jsx":"6"},{"size":205,"mtime":1606730113709,"results":"7","hashOfConfig":"8"},{"size":473,"mtime":1606472402788,"results":"9","hashOfConfig":"8"},{"size":1155,"mtime":1606473149507,"results":"10","hashOfConfig":"8"},{"size":582,"mtime":1606982195358,"results":"11","hashOfConfig":"8"},{"size":3585,"mtime":1607055905526,"results":"12","hashOfConfig":"8"},{"size":7358,"mtime":1606989555108,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1jfwvhd",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"D:\\项目\\git-react-dom\\react-demo\\my-app\\src\\index.js",[],["28","29"],"D:\\项目\\git-react-dom\\react-demo\\my-app\\src\\App.jsx",[],"D:\\项目\\git-react-dom\\react-demo\\my-app\\src\\views\\menu\\Left.jsx",[],"D:\\项目\\git-react-dom\\react-demo\\my-app\\src\\views\\menu\\Right.jsx",[],"D:\\项目\\git-react-dom\\react-demo\\my-app\\src\\components\\note\\index.jsx",[],"D:\\项目\\git-react-dom\\react-demo\\my-app\\src\\components\\code\\index.jsx",["30"],"import React, { useState, useEffect } from 'react'\r\nimport style from './style.module.scss'\r\nimport AceEditor from 'react-ace'\r\nimport 'brace/mode/javascript'\r\nimport \"ace-builds/src-noconflict/mode-css.js\";\r\nimport \"ace-builds/src-noconflict/mode-text.js\";\r\nimport \"ace-builds/src-noconflict/mode-sql.js\";\r\nimport \"ace-builds/src-noconflict/mode-scss.js\";\r\nimport \"ace-builds/src-noconflict/mode-sass.js\";\r\nimport \"ace-builds/src-noconflict/mode-php.js\";\r\nimport \"ace-builds/src-noconflict/mode-json.js\";\r\nimport \"ace-builds/src-noconflict/mode-java.js\";\r\nimport \"ace-builds/src-noconflict/mode-html.js\";\r\nimport \"ace-builds/src-noconflict/theme-ambiance.js\";\r\nimport \"ace-builds/src-noconflict/theme-gob.js\";\r\nimport \"brace/theme/chaos\";\r\nimport \"brace/theme/chrome\";\r\nimport \"brace/theme/clouds\";\r\nimport \"brace/theme/clouds_midnight\";\r\nimport \"brace/theme/cobalt\";\r\nimport \"brace/theme/crimson_editor\";\r\nimport \"brace/theme/dawn\";\r\nimport \"brace/theme/dracula\";\r\nimport \"brace/theme/dreamweaver\";\r\nimport \"brace/theme/eclipse\";\r\nimport \"brace/theme/github\";\r\nimport \"brace/theme/gruvbox\";\r\nimport \"brace/theme/idle_fingers\";\r\nimport \"brace/theme/iplastic\";\r\nimport \"brace/theme/katzenmilch\";\r\nimport \"brace/theme/tomorrow_night_blue\";\r\nimport { Select, Form, Button, message } from 'antd'\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport axios from 'axios'\r\nimport qs from 'qs'\r\nconst { Option } = Select\r\n\r\n\r\nfunction Code(props) {\r\n    const [code, setCode] = useState('')\r\n    const [config, setConfig] = useState({\r\n        theme: 'ambiance',\r\n        mode: 'javascript',\r\n        fontSize: 16,\r\n    })\r\n    const change = (change, all) => {\r\n        setConfig({\r\n            theme: all[0].value,\r\n            mode: all[1].value,\r\n            fontSize: all[2].value,\r\n        })\r\n    }\r\n    //获取笔记内容\r\n    const get_content = () => {\r\n        const { text_name } = props.match.params\r\n        axios.get('http://localhost:3030/file/open', { params: { text_name } }).then(res => {\r\n            setCode(res.data.data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        get_content()\r\n\r\n    }, [])\r\n\r\n    //保存笔记\r\n    const save_note = () => {\r\n        const data = qs.stringify({\r\n            text_name: props.match.params.text_name,\r\n            data: code\r\n        })\r\n        axios.post('http://localhost:3030/file/put', data).then(res => {\r\n            if (res.data.code === 200) {\r\n                message.success('保存成功！')\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className={style.code}>\r\n            <div className={style.config}>\r\n                <Form size='small' layout='inline' className={style.form} onFieldsChange={change} initialValues={config}>\r\n                    <Form.Item label=\"theme\" name='theme'>\r\n                        <Select style={{ width: '6vw' }}>\r\n                            <Option value=\"ambiance\">ambiance</Option>\r\n                            <Option value=\"chaos\">chaos</Option>\r\n                            <Option value=\"gob\">gob</Option>\r\n                            <Option value=\"chrome\">chrome</Option>\r\n                            <Option value=\"clouds\">clouds</Option>\r\n                            <Option value=\"clouds_midnight\">clouds_midnight</Option>\r\n                            <Option value=\"cobalt\">cobalt</Option>\r\n                            <Option value=\"crimson_editor\">crimson_editor</Option>\r\n                            <Option value=\"dawn\">dawn</Option>\r\n                            <Option value=\"dracula\">dracula</Option>\r\n                            <Option value=\"dreamweaver\">dreamweaver</Option>\r\n                            <Option value=\"eclipse\">eclipse</Option>\r\n                            <Option value=\"github\">github</Option>\r\n                            <Option value=\"gruvbox\">gruvbox</Option>\r\n                            <Option value=\"idle_fingers\">idle_fingers</Option>\r\n                            <Option value=\"iplastic\">iplastic</Option>\r\n                            <Option value=\"tomorrow_night_blue\">tomorrow_night_blue</Option>\r\n                            <Option value=\"katzenmilch\">katzenmilch</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"mode\" name='mode'>\r\n                        <Select style={{ width: '6vw' }}>\r\n                            <Option value=\"css\">css</Option>\r\n                            <Option value=\"javascript\">javascript</Option>\r\n                            <Option value=\"sass\">sass</Option>\r\n                            <Option value=\"scss\">scss</Option>\r\n                            <Option value=\"java\">java</Option>\r\n                            <Option value=\"php\">php</Option>\r\n                            <Option value=\"html\">html</Option>\r\n                            <Option value=\"text\">text</Option>\r\n                            <Option value=\"json\">json</Option>\r\n                            <Option value=\"sql\">sql</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"fontSize\" name='fontSize'>\r\n                        <Select style={{ width: '6vw' }}>\r\n                            <Option value={16}>16px</Option>\r\n                            <Option value={18}>18px</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button icon={<EllipsisOutlined />} />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button onClick={() => window.history.back(-1)} type='primary'>Back</Button>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button onClick={() => window.open('https://tool.lu/coderunner/')} type='primary'>Run</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n            </div>\r\n            <AceEditor\r\n                value={code}\r\n                fontSize={config.fontSize}\r\n                mode={config.mode}\r\n                theme={config.theme}\r\n                showPrintMargin={false}\r\n                showGutter\r\n                highlightActiveLine  //突出活动线\r\n                enableSnippets  //启用代码段\r\n                onChange={val => setCode(val)}\r\n                onBlur={save_note}\r\n                editorProps={{ $blockScrolling: true }}\r\n                style={{ width: '83vw', height: '82vh', }}\r\n                setOptions={{\r\n                    enableBasicAutocompletion: false,   //启用基本自动完成功能\r\n                    enableLiveAutocompletion: true,   //启用实时自动完成功能 （比如：智能代码提示）\r\n                    enableSnippets: false,  //启用代码段\r\n                    showLineNumbers: true,\r\n                    tabSize: 4\r\n                }}\r\n                commands={[{    //命令是键绑定数组。\r\n                    name: 'saveFile', //键绑定的名称。\r\n                    bindKey: { win: 'Ctrl-S', mac: 'Command-S' }, //用于命令的组合键。\r\n                    exec: () => {\r\n                        console.log('save')\r\n                        // save_note()\r\n                    }   //重新绑定命令的名称\r\n                }]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Code",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":64,"column":8,"nodeType":"37","endLine":64,"endColumn":10,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get_content'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [get_content]",{"range":"44","text":"45"},[2113,2115],"[get_content]"]